{"version":3,"file":"index.mjs","sources":["../lib/prngs.js","../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n// This file is generated using `scripts/build.js`.\n\n'use strict';\n\n// MODULES //\n\nvar prng0 = require( '@stdlib/random-base-arcsine' );\nvar prng1 = require( '@stdlib/random-base-bernoulli' );\nvar prng2 = require( '@stdlib/random-base-beta' );\nvar prng3 = require( '@stdlib/random-base-betaprime' );\nvar prng4 = require( '@stdlib/random-base-binomial' );\nvar prng5 = require( '@stdlib/random-base-box-muller' );\nvar prng6 = require( '@stdlib/random-base-cauchy' );\nvar prng7 = require( '@stdlib/random-base-chi' );\nvar prng8 = require( '@stdlib/random-base-chisquare' );\nvar prng9 = require( '@stdlib/random-base-cosine' );\nvar prng10 = require( '@stdlib/random-base-discrete-uniform' );\nvar prng11 = require( '@stdlib/random-base-erlang' );\nvar prng12 = require( '@stdlib/random-base-exponential' );\nvar prng13 = require( '@stdlib/random-base-f' );\nvar prng14 = require( '@stdlib/random-base-frechet' );\nvar prng15 = require( '@stdlib/random-base-gamma' );\nvar prng16 = require( '@stdlib/random-base-geometric' );\nvar prng17 = require( '@stdlib/random-base-gumbel' );\nvar prng18 = require( '@stdlib/random-base-hypergeometric' );\nvar prng19 = require( '@stdlib/random-base-improved-ziggurat' );\nvar prng20 = require( '@stdlib/random-base-invgamma' );\nvar prng21 = require( '@stdlib/random-base-kumaraswamy' );\nvar prng22 = require( '@stdlib/random-base-laplace' );\nvar prng23 = require( '@stdlib/random-base-levy' );\nvar prng24 = require( '@stdlib/random-base-logistic' );\nvar prng25 = require( '@stdlib/random-base-lognormal' );\nvar prng26 = require( '@stdlib/random-base-minstd' );\nvar prng27 = require( '@stdlib/random-base-minstd-shuffle' );\nvar prng28 = require( '@stdlib/random-base-mt19937' );\nvar prng29 = require( '@stdlib/random-base-negative-binomial' );\nvar prng30 = require( '@stdlib/random-base-normal' );\nvar prng31 = require( '@stdlib/random-base-pareto-type1' );\nvar prng32 = require( '@stdlib/random-base-poisson' );\nvar prng33 = require( '@stdlib/random-base-randi' );\nvar prng34 = require( '@stdlib/random-base-randn' );\nvar prng35 = require( '@stdlib/random-base-randu' );\nvar prng36 = require( '@stdlib/random-base-rayleigh' );\nvar prng37 = require( '@stdlib/random-base-t' );\nvar prng38 = require( '@stdlib/random-base-triangular' );\nvar prng39 = require( '@stdlib/random-base-uniform' );\nvar prng40 = require( '@stdlib/random-base-weibull' );\n\n\n// MAIN //\n\nvar prngs = {};\nprngs[ 'arcsine' ] = prng0.factory;\nprngs[ 'bernoulli' ] = prng1.factory;\nprngs[ 'beta' ] = prng2.factory;\nprngs[ 'betaprime' ] = prng3.factory;\nprngs[ 'binomial' ] = prng4.factory;\nprngs[ 'box-muller' ] = prng5.factory;\nprngs[ 'cauchy' ] = prng6.factory;\nprngs[ 'chi' ] = prng7.factory;\nprngs[ 'chisquare' ] = prng8.factory;\nprngs[ 'cosine' ] = prng9.factory;\nprngs[ 'discrete-uniform' ] = prng10.factory;\nprngs[ 'erlang' ] = prng11.factory;\nprngs[ 'exponential' ] = prng12.factory;\nprngs[ 'f' ] = prng13.factory;\nprngs[ 'frechet' ] = prng14.factory;\nprngs[ 'gamma' ] = prng15.factory;\nprngs[ 'geometric' ] = prng16.factory;\nprngs[ 'gumbel' ] = prng17.factory;\nprngs[ 'hypergeometric' ] = prng18.factory;\nprngs[ 'improved-ziggurat' ] = prng19.factory;\nprngs[ 'invgamma' ] = prng20.factory;\nprngs[ 'kumaraswamy' ] = prng21.factory;\nprngs[ 'laplace' ] = prng22.factory;\nprngs[ 'levy' ] = prng23.factory;\nprngs[ 'logistic' ] = prng24.factory;\nprngs[ 'lognormal' ] = prng25.factory;\nprngs[ 'minstd' ] = prng26.factory;\nprngs[ 'minstd-shuffle' ] = prng27.factory;\nprngs[ 'mt19937' ] = prng28.factory;\nprngs[ 'negative-binomial' ] = prng29.factory;\nprngs[ 'normal' ] = prng30.factory;\nprngs[ 'pareto-type1' ] = prng31.factory;\nprngs[ 'poisson' ] = prng32.factory;\nprngs[ 'randi' ] = prng33.factory;\nprngs[ 'randn' ] = prng34.factory;\nprngs[ 'randu' ] = prng35.factory;\nprngs[ 'rayleigh' ] = prng36.factory;\nprngs[ 't' ] = prng37.factory;\nprngs[ 'triangular' ] = prng38.factory;\nprngs[ 'uniform' ] = prng39.factory;\nprngs[ 'weibull' ] = prng40.factory;\n\n\n// EXPORTS //\n\nmodule.exports = prngs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar isObject = require( '@stdlib/assert-is-plain-object' );\nvar isArray = require( '@stdlib/assert-is-array' );\nvar contains = require( '@stdlib/assert-contains' );\nvar Int32Array = require( '@stdlib/array-int32' );\nvar Uint32Array = require( '@stdlib/array-uint32' );\nvar table = require( './prngs.js' );\n\n\n// VARIABLES //\n\nvar TYPED_ARRAY_CTORS = {\n\t'Int32Array': Int32Array,\n\t'Uint32Array': Uint32Array\n};\nvar PRNG_WRAPPERS = [ 'randi', 'randn', 'randu' ];\n\n\n// MAIN //\n\n/**\n* Revives a JSON-serialized pseudorandom number generator.\n*\n* @param {string} key - key\n* @param {*} value - value\n* @returns {(*|Function)} value or PRNG\n*\n* @example\n* var parseJSON = require( '@stdlib/utils-parse-json' );\n* var mt19937 = require( '@stdlib/random-base-mt19937' );\n*\n* var str = JSON.stringify( mt19937 );\n* var rand = parseJSON( str, reviver );\n* // returns <Function>\n*/\nfunction reviver( key, value ) {\n\tvar factory;\n\tvar opts;\n\tvar args;\n\tvar ctor;\n\tvar tmp;\n\tif (\n\t\tvalue &&\n\t\tvalue.type === 'PRNG' &&\n\t\tisString( value.name ) &&\n\t\tisObject( value.state ) &&\n\t\tisArray( value.params ) &&\n\t\tisString( value.state.type ) &&\n\t\tisArray( value.state.data )\n\t) {\n\t\topts = {};\n\t\tfactory = table[ value.name ];\n\t\tif ( factory === void 0 ) {\n\t\t\ttmp = value.name.split( '-' );\n\t\t\tif ( contains( PRNG_WRAPPERS, tmp[ 0 ] ) ) {\n\t\t\t\tfactory = table[ tmp[ 0 ] ];\n\t\t\t\topts.name = tmp.slice( 1 ).join( '-' );\n\t\t\t}\n\t\t}\n\t\tif ( factory ) {\n\t\t\tctor = TYPED_ARRAY_CTORS[ value.state.type ];\n\t\t\tif ( ctor ) {\n\t\t\t\topts.state = new ctor( value.state.data );\n\n\t\t\t\targs = value.params.slice();\n\t\t\t\targs.push( opts );\n\n\t\t\t\ttry {\n\t\t\t\t\treturn factory.apply( null, args );\n\t\t\t\t} catch ( error ) { // eslint-disable-line no-unused-vars\n\t\t\t\t\t// Return the original JSON value...\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n}\n\n\n// EXPORTS //\n\nmodule.exports = reviver;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Revive a JSON-serialized pseudorandom generator.\n*\n* @module @stdlib/random-base-reviver\n*\n* @example\n* var mt19937 = require( '@stdlib/random-base-mt19937' );\n* var reviver = require( '@stdlib/random-base-reviver' );\n*\n* var str = JSON.stringify( mt19937 );\n* var rand = JSON.parse( str, reviver );\n* // returns <Function>\n*/\n\n// MODULES //\n\nvar reviver = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = reviver;\n"],"names":["prng0","require$$0","prng1","require$$1","prng2","require$$2","prng3","require$$3","prng4","require$$4","prng5","require$$5","prng6","require$$6","prng7","require$$7","prng8","require$$8","prng9","require$$9","prng10","require$$10","prng11","require$$11","prng12","require$$12","prng13","require$$13","prng14","require$$14","prng15","require$$15","prng16","require$$16","prng17","require$$17","prng18","require$$18","prng19","require$$19","prng20","require$$20","prng21","require$$21","prng22","require$$22","prng23","require$$23","prng24","require$$24","prng25","require$$25","prng26","require$$26","prng27","require$$27","prng28","require$$28","prng29","require$$29","prng30","require$$30","prng31","require$$31","prng32","require$$32","prng33","require$$33","prng34","require$$34","prng35","require$$35","prng36","require$$36","prng37","require$$37","prng38","require$$38","prng39","require$$39","prng40","require$$40","prngs","factory","prngs_1","isString","isPrimitive","isObject","isArray","contains","table","TYPED_ARRAY_CTORS","Int32Array","Uint32Array","PRNG_WRAPPERS","lib","key","value","opts","args","ctor","tmp","type","name","state","params","data","split","slice","join","push","apply","error"],"mappings":";0gIAwqBlF,EAAMmF,QAC3BD,aAAuBhF,EAAMiF,QAC7BD,QAAkB9E,EAAM+E,QACxBD,aAAuB5E,EAAM6E,QAC7BD,YAAsB1E,EAAM2E,QAC5BD,GAAO,cAAiBxE,EAAMyE,QAC9BD,UAAoBtE,EAAMuE,QAC1BD,OAAiBpE,GAAMqE,QACvBD,aAAuBlE,GAAMmE,QAC7BD,UAAoBhE,GAAMiE,QAC1BD,GAAO,oBAAuB9D,GAAO+D,QACrCD,UAAoB5D,GAAO6D,QAC3BD,eAAyB1D,GAAO2D,QAChCD,KAAexD,GAAOyD,QACtBD,WAAqBtD,GAAOuD,QAC5BD,SAAmBpD,GAAOqD,QAC1BD,aAAuBlD,GAAOmD,QAC9BD,UAAoBhD,GAAOiD,QAC3BD,kBAA4B9C,GAAO+C,QACnCD,GAAO,qBAAwB5C,GAAO6C,QACtCD,YAAsB1C,GAAO2C,QAC7BD,eAAyBxC,GAAOyC,QAChCD,WAAqBtC,GAAOuC,QAC5BD,QAAkBpC,GAAOqC,QACzBD,YAAsBlC,GAAOmC,QAC7BD,aAAuBhC,GAAOiC,QAC9BD,UAAoB9B,GAAO+B,QAC3BD,GAAO,kBAAqB5B,GAAO6B,QACnCD,WAAqB1B,GAAO2B,QAC5BD,GAAO,qBAAwBxB,GAAOyB,QACtCD,UAAoBtB,GAAOuB,QAC3BD,GAAO,gBAAmBpB,GAAOqB,QACjCD,WAAqBlB,GAAOmB,QAC5BD,SAAmBhB,GAAOiB,QAC1BD,SAAmBd,GAAOe,QAC1BD,SAAmBZ,GAAOa,QAC1BD,YAAsBV,GAAOW,QAC7BD,KAAeR,GAAOS,QACtBD,cAAwBN,GAAOO,QAC/BD,WAAqBJ,GAAOK,QAC5BD,WAAqBF,GAAOG,YAK5BC,GAAiBF,GC7FbG,GAAWpF,EAAsCqF,YACjDC,GAAWpF,EACXqF,GAAUnF,EACVoF,GAAWlF,EAGXmF,GAAQ7E,GAKR8E,GAAoB,CACvBC,WARgBnF,EAShBoF,YARiBlF,GAUdmF,GAAgB,CAAE,QAAS,QAAS,aCIxCC,GDgBA,SAAkBC,EAAKC,GACtB,IAAId,EACAe,EACAC,EACAC,EACAC,EACJ,GACCJ,GACe,SAAfA,EAAMK,MACNjB,GAAUY,EAAMM,OAChBhB,GAAUU,EAAMO,QAChBhB,GAASS,EAAMQ,SACfpB,GAAUY,EAAMO,MAAMF,OACtBd,GAASS,EAAMO,MAAME,QAErBR,EAAO,QAEU,KADjBf,EAAUO,GAAOO,EAAMM,SAEtBF,EAAMJ,EAAMM,KAAKI,MAAO,KACnBlB,GAAUK,GAAeO,EAAK,MAClClB,EAAUO,GAAOW,EAAK,IACtBH,EAAKK,KAAOF,EAAIO,MAAO,GAAIC,KAAM,OAG9B1B,IACJiB,EAAOT,GAAmBM,EAAMO,MAAMF,QAC1B,CACXJ,EAAKM,MAAQ,IAAIJ,EAAMH,EAAMO,MAAME,OAEnCP,EAAOF,EAAMQ,OAAOG,SACfE,KAAMZ,GAEX,IACC,OAAOf,EAAQ4B,MAAO,KAAMZ,GAC3B,MAAQa,KAMb,OAAOf"}