{"version":3,"file":"index.mjs","sources":["../lib/prngs.js","../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n// This file is generated using `scripts/build.js`.\n\n'use strict';\n\n// MODULES //\n\nimport prng0 from '@stdlib/random-base-arcsine';\nimport prng1 from '@stdlib/random-base-bernoulli';\nimport prng2 from '@stdlib/random-base-beta';\nimport prng3 from '@stdlib/random-base-betaprime';\nimport prng4 from '@stdlib/random-base-binomial';\nimport prng5 from '@stdlib/random-base-box-muller';\nimport prng6 from '@stdlib/random-base-cauchy';\nimport prng7 from '@stdlib/random-base-chi';\nimport prng8 from '@stdlib/random-base-chisquare';\nimport prng9 from '@stdlib/random-base-cosine';\nimport prng10 from '@stdlib/random-base-discrete-uniform';\nimport prng11 from '@stdlib/random-base-erlang';\nimport prng12 from '@stdlib/random-base-exponential';\nimport prng13 from '@stdlib/random-base-f';\nimport prng14 from '@stdlib/random-base-frechet';\nimport prng15 from '@stdlib/random-base-gamma';\nimport prng16 from '@stdlib/random-base-geometric';\nimport prng17 from '@stdlib/random-base-gumbel';\nimport prng18 from '@stdlib/random-base-hypergeometric';\nimport prng19 from '@stdlib/random-base-improved-ziggurat';\nimport prng20 from '@stdlib/random-base-invgamma';\nimport prng21 from '@stdlib/random-base-kumaraswamy';\nimport prng22 from '@stdlib/random-base-laplace';\nimport prng23 from '@stdlib/random-base-levy';\nimport prng24 from '@stdlib/random-base-logistic';\nimport prng25 from '@stdlib/random-base-lognormal';\nimport prng26 from '@stdlib/random-base-minstd';\nimport prng27 from '@stdlib/random-base-minstd-shuffle';\nimport prng28 from '@stdlib/random-base-mt19937';\nimport prng29 from '@stdlib/random-base-negative-binomial';\nimport prng30 from '@stdlib/random-base-normal';\nimport prng31 from '@stdlib/random-base-pareto-type1';\nimport prng32 from '@stdlib/random-base-poisson';\nimport prng33 from '@stdlib/random-base-randi';\nimport prng34 from '@stdlib/random-base-randn';\nimport prng35 from '@stdlib/random-base-randu';\nimport prng36 from '@stdlib/random-base-rayleigh';\nimport prng37 from '@stdlib/random-base-t';\nimport prng38 from '@stdlib/random-base-triangular';\nimport prng39 from '@stdlib/random-base-uniform';\nimport prng40 from '@stdlib/random-base-weibull';\n\n\n// MAIN //\n\nvar prngs = {};\nprngs[ 'arcsine' ] = prng0.factory;\nprngs[ 'bernoulli' ] = prng1.factory;\nprngs[ 'beta' ] = prng2.factory;\nprngs[ 'betaprime' ] = prng3.factory;\nprngs[ 'binomial' ] = prng4.factory;\nprngs[ 'box-muller' ] = prng5.factory;\nprngs[ 'cauchy' ] = prng6.factory;\nprngs[ 'chi' ] = prng7.factory;\nprngs[ 'chisquare' ] = prng8.factory;\nprngs[ 'cosine' ] = prng9.factory;\nprngs[ 'discrete-uniform' ] = prng10.factory;\nprngs[ 'erlang' ] = prng11.factory;\nprngs[ 'exponential' ] = prng12.factory;\nprngs[ 'f' ] = prng13.factory;\nprngs[ 'frechet' ] = prng14.factory;\nprngs[ 'gamma' ] = prng15.factory;\nprngs[ 'geometric' ] = prng16.factory;\nprngs[ 'gumbel' ] = prng17.factory;\nprngs[ 'hypergeometric' ] = prng18.factory;\nprngs[ 'improved-ziggurat' ] = prng19.factory;\nprngs[ 'invgamma' ] = prng20.factory;\nprngs[ 'kumaraswamy' ] = prng21.factory;\nprngs[ 'laplace' ] = prng22.factory;\nprngs[ 'levy' ] = prng23.factory;\nprngs[ 'logistic' ] = prng24.factory;\nprngs[ 'lognormal' ] = prng25.factory;\nprngs[ 'minstd' ] = prng26.factory;\nprngs[ 'minstd-shuffle' ] = prng27.factory;\nprngs[ 'mt19937' ] = prng28.factory;\nprngs[ 'negative-binomial' ] = prng29.factory;\nprngs[ 'normal' ] = prng30.factory;\nprngs[ 'pareto-type1' ] = prng31.factory;\nprngs[ 'poisson' ] = prng32.factory;\nprngs[ 'randi' ] = prng33.factory;\nprngs[ 'randn' ] = prng34.factory;\nprngs[ 'randu' ] = prng35.factory;\nprngs[ 'rayleigh' ] = prng36.factory;\nprngs[ 't' ] = prng37.factory;\nprngs[ 'triangular' ] = prng38.factory;\nprngs[ 'uniform' ] = prng39.factory;\nprngs[ 'weibull' ] = prng40.factory;\n\n\n// EXPORTS //\n\nexport default prngs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert-is-string';\nimport isObject from '@stdlib/assert-is-plain-object';\nimport isArray from '@stdlib/assert-is-array';\nimport contains from '@stdlib/assert-contains';\nimport Int32Array from '@stdlib/array-int32';\nimport Uint32Array from '@stdlib/array-uint32';\nimport table from './prngs.js';\n\n\n// VARIABLES //\n\nvar TYPED_ARRAY_CTORS = {\n\t'Int32Array': Int32Array,\n\t'Uint32Array': Uint32Array\n};\nvar PRNG_WRAPPERS = [ 'randi', 'randn', 'randu' ];\n\n\n// MAIN //\n\n/**\n* Revives a JSON-serialized pseudorandom number generator.\n*\n* @param {string} key - key\n* @param {*} value - value\n* @returns {(*|Function)} value or PRNG\n*\n* @example\n* import parseJSON from '@stdlib/utils-parse-json';\n* import mt19937 from '@stdlib/random-base-mt19937';\n*\n* var str = JSON.stringify( mt19937 );\n* var rand = parseJSON( str, reviveBasePRNG );\n* // returns <Function>\n*/\nfunction reviveBasePRNG( key, value ) {\n\tvar factory;\n\tvar opts;\n\tvar args;\n\tvar ctor;\n\tvar tmp;\n\tif (\n\t\tvalue &&\n\t\tvalue.type === 'PRNG' &&\n\t\tisString( value.name ) &&\n\t\tisObject( value.state ) &&\n\t\tisArray( value.params ) &&\n\t\tisString( value.state.type ) &&\n\t\tisArray( value.state.data )\n\t) {\n\t\topts = {};\n\t\tfactory = table[ value.name ];\n\t\tif ( factory === void 0 ) {\n\t\t\ttmp = value.name.split( '-' );\n\t\t\tif ( contains( PRNG_WRAPPERS, tmp[ 0 ] ) ) {\n\t\t\t\tfactory = table[ tmp[ 0 ] ];\n\t\t\t\topts.name = tmp.slice( 1 ).join( '-' );\n\t\t\t}\n\t\t}\n\t\tif ( factory ) {\n\t\t\tctor = TYPED_ARRAY_CTORS[ value.state.type ];\n\t\t\tif ( ctor ) {\n\t\t\t\topts.state = new ctor( value.state.data );\n\n\t\t\t\targs = value.params.slice();\n\t\t\t\targs.push( opts );\n\n\t\t\t\ttry {\n\t\t\t\t\treturn factory.apply( null, args );\n\t\t\t\t} catch ( error ) { // eslint-disable-line no-unused-vars\n\t\t\t\t\t// Return the original JSON value...\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n}\n\n\n// EXPORTS //\n\nexport default reviveBasePRNG;\n"],"names":["prngs","prng0","factory","prng1","prng2","prng3","prng4","prng5","prng6","prng7","prng8","prng9","prng10","prng11","prng12","prng13","prng14","prng15","prng16","prng17","prng18","prng19","prng20","prng21","prng22","prng23","prng24","prng25","prng26","prng27","prng28","prng29","prng30","prng31","prng32","prng33","prng34","prng35","prng36","prng37","prng38","prng39","prng40","TYPED_ARRAY_CTORS","Int32Array","Uint32Array","PRNG_WRAPPERS","reviveBasePRNG","key","value","opts","args","ctor","tmp","type","isString","name","isObject","state","isArray","params","data","table","split","contains","slice","join","push","apply","error"],"mappings":";;uiIAqEA,IAAIA,EAAQ,CAAA,EACZA,EAAgB,QAAKC,EAAMC,QAC3BF,EAAkB,UAAKG,EAAMD,QAC7BF,EAAa,KAAKI,EAAMF,QACxBF,EAAkB,UAAKK,EAAMH,QAC7BF,EAAiB,SAAKM,EAAMJ,QAC5BF,EAAO,cAAiBO,EAAML,QAC9BF,EAAe,OAAKQ,EAAMN,QAC1BF,EAAY,IAAKS,EAAMP,QACvBF,EAAkB,UAAKU,EAAMR,QAC7BF,EAAe,OAAKW,EAAMT,QAC1BF,EAAO,oBAAuBY,EAAOV,QACrCF,EAAe,OAAKa,EAAOX,QAC3BF,EAAoB,YAAKc,EAAOZ,QAChCF,EAAU,EAAKe,EAAOb,QACtBF,EAAgB,QAAKgB,EAAOd,QAC5BF,EAAc,MAAKiB,EAAOf,QAC1BF,EAAkB,UAAKkB,EAAOhB,QAC9BF,EAAe,OAAKmB,EAAOjB,QAC3BF,EAAuB,eAAKoB,EAAOlB,QACnCF,EAAO,qBAAwBqB,EAAOnB,QACtCF,EAAiB,SAAKsB,EAAOpB,QAC7BF,EAAoB,YAAKuB,EAAOrB,QAChCF,EAAgB,QAAKwB,EAAOtB,QAC5BF,EAAa,KAAKyB,EAAOvB,QACzBF,EAAiB,SAAK0B,EAAOxB,QAC7BF,EAAkB,UAAK2B,EAAOzB,QAC9BF,EAAe,OAAK4B,EAAO1B,QAC3BF,EAAO,kBAAqB6B,EAAO3B,QACnCF,EAAgB,QAAK8B,EAAO5B,QAC5BF,EAAO,qBAAwB+B,EAAO7B,QACtCF,EAAe,OAAKgC,EAAO9B,QAC3BF,EAAO,gBAAmBiC,EAAO/B,QACjCF,EAAgB,QAAKkC,EAAOhC,QAC5BF,EAAc,MAAKmC,EAAOjC,QAC1BF,EAAc,MAAKoC,EAAOlC,QAC1BF,EAAc,MAAKqC,EAAOnC,QAC1BF,EAAiB,SAAKsC,EAAOpC,QAC7BF,EAAU,EAAKuC,EAAOrC,QACtBF,EAAmB,WAAKwC,EAAOtC,QAC/BF,EAAgB,QAAKyC,EAAOvC,QAC5BF,EAAgB,QAAK0C,EAAOxC,QC7E5B,IAAIyC,EAAoB,CACvBC,WAAcA,EACdC,YAAeA,GAEZC,EAAgB,CAAE,QAAS,QAAS,SAoBxC,SAASC,EAAgBC,EAAKC,GAC7B,IAAI/C,EACAgD,EACAC,EACAC,EACAC,EACJ,GACCJ,GACe,SAAfA,EAAMK,MACNC,EAAUN,EAAMO,OAChBC,EAAUR,EAAMS,QAChBC,EAASV,EAAMW,SACfL,EAAUN,EAAMS,MAAMJ,OACtBK,EAASV,EAAMS,MAAMG,QAErBX,EAAO,CAAA,OAEU,KADjBhD,EAAU4D,EAAOb,EAAMO,SAEtBH,EAAMJ,EAAMO,KAAKO,MAAO,KACnBC,EAAUlB,EAAeO,EAAK,MAClCnD,EAAU4D,EAAOT,EAAK,IACtBH,EAAKM,KAAOH,EAAIY,MAAO,GAAIC,KAAM,OAG9BhE,IACJkD,EAAOT,EAAmBM,EAAMS,MAAMJ,QAC1B,CACXJ,EAAKQ,MAAQ,IAAIN,EAAMH,EAAMS,MAAMG,OAEnCV,EAAOF,EAAMW,OAAOK,SACfE,KAAMjB,GAEX,IACC,OAAOhD,EAAQkE,MAAO,KAAMjB,EAG5B,CAFC,MAAQkB,GAET,CACD,CAGH,OAAOpB,CACR"}